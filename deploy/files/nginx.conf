# Uncomment this to rewrite other sites to your actual web URL:
#server {
#  listen 80;
#  listen [::]:80;
#  server_name {{cookiecutter.domain_stage}};
#  return 301 https://{{cookiecutter.domain_stage}}$request_uri;
#}

upstream phoenix_upstream {
    server 127.0.0.1:8000;
}

server {
  listen 80;
  listen [::]:80;
  # Uncomment below to enable https:
  #listen 443 ssl http2;
  #listen [::]:443 ssl http2;
  #ssl_certificate /etc/ssl/cloudnet/chain.crt;
  #ssl_certificate_key /etc/ssl/cloudnet/cert.key;
  #include /etc/nginx/ssl_config.conf;
  #include /etc/nginx/acme-challenges.conf;

  server_name {{cookiecutter.domain_stage}} {{cookiecutter.domain_prod}};

  root /mnt/persist/www/{{ cookiecutter.project_slug }}/current/src;

  #include /mnt/persist/nginx/frojd-protection.conf;

  #location /static/ {
    #expires 30d;
    #access_log off;
    #alias /mnt/persist/www/{{ cookiecutter.project_slug }}/current/src/static/;
  #}

  #location /media/ {
    #expires 30d;
    #access_log off;
    #alias /mnt/persist/www/{{ cookiecutter.project_slug }}/current/src/media/;
  #}

  #location /robots.txt {
    #alias /mnt/persist/www/{{ cookiecutter.project_slug }}/shared/robots.txt;
  #}

  location / {
    # Proxy Headers
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Cluster-Client-Ip $remote_addr;

    # The Important Websocket Bits!
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_pass http://phoenix_upstream;
  }

  # what to serve if upstream is not available or crashes
  error_page 500 502 503 504 /static/50x.html;
}
# Don't forget to restart nginx: "service nginx restart" if you change this file.
